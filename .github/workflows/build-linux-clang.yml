name: Build with clang

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install newest clang
      run: |
        sudo apt-get install -y clang-15
    
    - name: Install Conan
      run: |
        pip3 install conan 

    - name: Create build directory
      run: mkdir ${{github.workspace}}/build
      
    - name: Install dependencies
      run: CC="clang-15" CXX="clang++-15" conan install ./ --output-folder=${{github.workspace}}/build --build=missing --profile=${{github.workspace}}/.github/workflows/conan-profiles/linux-gcc --profile:build=${{github.workspace}}/.github/workflows/conan-profiles/linux-gcc
    
    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: CC="clang-15" CXX="clang++-15" conan build ../ --profile=${{github.workspace}}/.github/workflows/conan-profiles/linux-gcc --profile:build=${{github.workspace}}/.github/workflows/conan-profiles/linux-gcc

    - name: Test
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --test-dir tests

