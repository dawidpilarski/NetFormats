name: Build with gcc

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install newest gcc
      run: |
        sudo apt-get install -y gcc-12
    
    - name: Install Conan
      run: |
        pip3 install conan 
        conan profile new --detect default
        conan profile update settings.compiler.version=12 default
        conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Create build directory
      run: mkdir ${{github.workspace}}/build
      
    - name: Install dependencies
      working-directory: ${{github.workspace}}/build
      run: CC="gcc-12" CXX="g++-12" conan install ../ --build=missing
    
    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: CC="gcc-12" CXX="g++-12" cmake CMAKE_CXX_COMPILER="g++-12" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DNF_BUILD_TESTS=ON ../

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: CC="gcc-12" CXX="g++-12" cmake --build .

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --test-dir tests

